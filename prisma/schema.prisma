// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String
  lastName          String
  email             String    @unique
  hashedPassword    String?
  verificationToken String?
  emailVerified     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  favoriteServiceIds String[] @db.ObjectId

  services     Service[]
  reservations Reservation[]
  Account      Account[]
}

model Service {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  title        String
  description  String
  currency     String
  category     String // New field
  oneTimePrice Float?
  hourlyPrice  Float?
  dailyPrice   Float?
  imageUrls    String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
}

model Reservation {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String? @db.ObjectId

  User User? @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
